/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/
/* Select all elements */
* {
  margin: 0;
  /* some elements have these by default, we wnat to remove them */
  padding: 0;
  box-sizing: border-box;
  /* don't add padding/borders to the height/width of the element  */ }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  padding: 30px; }

.header {
  position: relative;
  /* Origin/reference - top, left etc start to count from here */
  height: 95vh;
  /* 95% of the viewport height */
  background-image: linear-gradient(to right bottom, rgba(85, 197, 122, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  /* Fix the bg to top */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  /* polygon(x y, x y, x y, x y); coordinates - advanced CSS */ }

.logobox {
  position: absolute;
  top: 40px;
  /* WE NEED TO SET PARENT ELEMENT (header) TO RELATIVE TO USE THESE VALUES */
  left: 40px; }

.logo {
  height: 35px; }

.logobox:hover {
  transform: scale(1.2);
  transition-duration: 1s; }

.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* removes shakiness from animation.. */
  margin-bottom: 60px; }

.heading-primary-main {
  display: block;
  /* Changing span (inline-element) to block = creates line break automatically! */
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;
  animation-name: moveInLeft;
  /* Using the moveinleft animation created with keyframes below */
  animation-duration: 1s;
  /* 
        animation-delay: 3s; wait 3s before start
        animation-iteration-count: 3
    */ }

.heading-primary-sub {
  display: block;
  /* Changing span (inline-element) to block = creates line break automatically! */
  font-size: 20px;
  font-weight: 600;
  letter-spacing: 17.4px;
  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation: moveInRight 1s ease-out */ }

/* Creating animations with keyframes */
@keyframes moveInLeft {
  /* Controlling the animation in time - 0% = start, 100% = finish */
  0% {
    opacity: 0;
    transform: translateX(-100px); }
  80% {
    transform: translateX(15px); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  /* Controlling the animation in time - 0% = start, 100% = finish */
  0% {
    opacity: 0;
    transform: translateX(100px); }
  80% {
    transform: translateX(-15px); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  /* Controlling the animation in time - 0% = start, 100% = finish */
  0% {
    opacity: 0;
    transform: translateY(40px); }
  100% {
    opacity: 1;
    transform: translate(0); } }

/* : -> pseudo-elements */
.btn:link,
.btn:visited {
  display: inline-block;
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  /* top-bottom, right-left */
  border-radius: 100px;
  /* round corners */
  transition: all .2s;
  /* works on transforms below */
  position: relative;
  /* ::after pseudo-element is absolute below */ }

.btn:hover {
  transform: translateY(-3px);
  /* - to go up - transition has to be on the parent element!*/
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  /* x, y, blur, color */ }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
  /* x, y, blur, color */ }

.btn-white {
  background-color: #fff;
  color: #777; }

/* Same as .btn, but right after it - basiclly a child element */
.btn::after {
  content: '';
  /* We need to specify content property */
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 100px;
  position: absolute;
  /* Absolute positioning has to have a reference! (relative) */
  top: 0;
  left: 0;
  z-index: -1;
  transition: all .4s; }

.btn-white::after {
  background-color: #fff; }

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn-animated {
  animation: moveInBottom 1s ease-out .75s;
  /* Last one is delay! */
  animation-fill-mode: backwards;
  /* Automatiaclly add the 0% keyframe from start to the element! */ }
