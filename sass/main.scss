/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

$color-primary: #7ed56f;
$color-primary-light: #55c57a;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

/* Select all elements */
*,
*::after,
*::before {
    margin: 0; /* some elements have these by default, we wnat to remove them */
    padding: 0;
    box-sizing: inherit; /* don't add padding/borders to the height/width of the element  */
}

html {
    font-size: 62.5%; /* 10px;  = 10px / 16px (default in most browsers) We set percentage because some people like to increase the browser font-size! */ //DEFINING THIS AS ROOT FONT SIZE - NOW USING REM-s (relative to font-size) ON ALL ELEMENTS (maintainable code!!) 
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    // font-size: 16px;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
    box-sizing: border-box; //Inheriting in *
}

.header {
    position: relative; /* Origin/reference - top, left etc start to count from here */
    height: 95vh; /* 95% of the viewport height */
    background-image: linear-gradient(to right bottom,
    rgba($color-primary-light, 0.8),
    rgba($color-primary-dark, 0.8)),
    url(../img/hero.jpg);
    background-size: cover;
    background-position: top; /* Fix the bg to top */
    
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* polygon(x y, x y, x y, x y); coordinates - advanced CSS */

    //Same as .header__logo-box
    &__logo-box {
        position: absolute;
        top: 4rem; // WE NEED TO SET PARENT ELEMENT (header) TO RELATIVE TO USE THESE VALUES 
        left: 4rem;
    }

    &__logo {
    height: 3.5rem; 
    }

    &__logo-box:hover {
        transform: scale(1.2);
        transition-duration: 1s;
    }

    &__text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate( /* CENTERING THE TITLE BOX */
            -50%, -50%
        );
        text-align: center;
    }
}
/* .header__logo-box { 
    position: absolute;
    top: 4rem; // WE NEED TO SET PARENT ELEMENT (header) TO RELATIVE TO USE THESE VALUES 
    left: 4rem;
} */



.heading-primary {
    color: $color-white;
    text-transform: uppercase;

    backface-visibility: hidden; /* removes shakiness from animation.. */
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block; /* Changing span (inline-element) to block = creates line break automatically! */
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft; /* Using the moveinleft animation created with keyframes below */
    animation-duration: 1s;
    /* 
        animation-delay: 3s; wait 3s before start
        animation-iteration-count: 3
    */
}
.heading-primary--sub {
    display: block; /* Changing span (inline-element) to block = creates line break automatically! */
    font-size: 2rem;
    font-weight: 600;
    letter-spacing: 1.75rem;

    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;

    /* animation: moveInRight 1s ease-out */

}

/* Creating animations with keyframes */
@keyframes moveInLeft {
    /* Controlling the animation in time - 0% = start, 100% = finish */
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1.5rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    /* Controlling the animation in time - 0% = start, 100% = finish */
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1.5rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    /* Controlling the animation in time - 0% = start, 100% = finish */
    0% {
        opacity: 0;
        transform: translateY(40px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

/* : -> pseudo-elements */
.btn:link,
.btn:visited {
    display: inline-block;
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem; /* top-bottom, right-left */
    border-radius: 10rem; /* round corners */
    transition: all .2s; /* works on transforms below */
    position: relative; /* ::after pseudo-element is absolute below */
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-.3rem); /* - to go up - transition has to be on the parent element!*/
    box-shadow: 0 1rem 2rem rgba($color-black,.2); /* x, y, blur, color */
}

.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-black,.2); /* x, y, blur, color */
}

.btn--white {
    background-color: $color-white;
    color: $color-grey-dark;
}

/* Same as .btn, but right after it - basiclly a child element */
.btn::after {
    content: ''; /* We need to specify content property */
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute; /* Absolute positioning has to have a reference! (relative) */
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn--white::after {
    background-color: $color-white;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.7);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom 1s ease-out .75s; /* Last one is delay! */
    animation-fill-mode: backwards; /* Automatiaclly add the 0% keyframe from start to the element! */
}
